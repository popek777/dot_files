" 
" opera codebase settings, functions, commands
"

let g:c_like_files_extensions_csv='cpp,cc,h,hpp'

" build command
:command! -nargs=1 OperaBuild 
      \ :cgetexpr system('ninja -C ./chromium/src/out/Debug/ <args>')

" clang formatter path (variable used in clang-format.py script)
let g:clang_format_path = 
      \ $HOME . '/workspace/work/chromium/src/buildtools/linux64/clang-format'

" update cscope database (pure set of bash commands)
function! FOperaUpdateCscopeDb()
  :!cd $HOME/workspace/work
        \&& rm -f cscope*
        \ 
        \&& find . -name *.h -or
        \ -name *.hpp -or
        \ -name *.cc -or 
        \ -name *.cpp > cscope.files
        \
        \&& cscope -b -q -k
endfunction
:command! OperaUpdateCscopeDb :call FOperaUpdateCscopeDb()

" update ctags database 
" based on https://www.youtube.com/watch?v=o0BgAp11C9s
function! FOperaUpdateCtagsDb()
  :!cd $HOME/workspace/work
        \ && rm -f tags 
        \ 
        \ && ctags 
        \ --c++-kinds=+p 
        \ --fields=+iaS 
        \ --extra=+q 
        \ -f ./tags 
        \ -R
        \ --languages=C++ 
        \ --exclude=chromium/src/out/* 
        \ --exclude=chromium/src/third_party/*
        \ --exclude=chromium/src/build* 
        \ .
endfunction
function! FOperaUpdateCtagsWithThirdpartyDb()
  :!cd $HOME/workspace/work
        \ && rm -f tags 
        \ 
        \ && ctags 
        \ --c++-kinds=+p 
        \ --fields=+iaS 
        \ --extra=+q 
        \ -f ./tags 
        \ -R
        \ --languages=C++ 
        \ --exclude=chromium/src/out/* 
        \ --exclude=chromium/src/build* 
        \ .
endfunction
:command! OperaUpdateCtagsDb :call FOperaUpdateCtagsDb()
:command! OperaUpdateCtagsWithThirdpartyDb :call FOperaUpdateCtagsWithThirdpartyDb()

" based on
" http://vim.wikia.com/wiki/Easily_switch_between_source_and_header_file
function! SwitchSourceHeader()
  let l:ext = expand ("%:e")
  echo l:ext
  if ( l:ext == "cc" || l:ext == "cpp")
    find %:t:r.h
  elseif (l:ext == "h")
    let l:no_ext = expand("%:p:r")
    if filereadable(l:no_ext . ".cc")
      find %:t:r.cc
    elseif filereadable(l:no_ext . ".cpp")
      find %:t:r.cpp
    else
      echo "cc, nor cpp file was not found"
    endif
  else 
    echo "toggling skipped (not a c++ file)"
  endif
endfunction
nmap ,s :call SwitchSourceHeader()<CR>

" YCM plugin settings
" path to config file (the only difference with default one is additional
" includes)
let g:ycm_global_ycm_extra_conf = $HOME . '/.vim/.ycm_extra_conf_opera.py'

" extend path (so gf - goto file under cursor) works correctly 
set path=.,,/usr/include,chromium/src,chromium/src/v8/include,chromium/src/third_party/WebKit,chromium/src/third_party/WebKit/Source,chromium/src/out/Debug,chromium/src/out/Debug/blink

" rtags settings
let g:rtagsRcCmd=$HOME . '/rtags/build/bin/rc'
